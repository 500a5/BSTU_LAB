; PEREMENNIE
MK_ADC BIT P1.0 		;SIGNAL GASHENIE/PREOBRAZOVANIE
INF_ADC DATA 30h 	;HRANITCA PRINYATOE OT ADC CHISLO 
ADC_MK BIT P1.1		;SIGNAL GOTOV
SOTNI DATA 31h 		;SOTNI VIVODIMOGO CHISLA
DES DATA 32h 			;DESYATKI
EDIN DATA 33h 		;EDINICI
TIME EQU 10000 		;10ms
INIT_PPI EQU 10000010b 	;A-VIVOD, B-VVOD, C-VIVOD(INDIKACIA) DLYA BB55
INIT_KN EQU 0010000b	;VIBOR 2-OGO KOMMUTATORA NAPRYASHGENIA I 1 PORT
P_A EQU 0		;ADDRESS PORTA A V BB55
P_B EQU 1 		;ADDRESS PORTA B
P_C EQU 2 		;ADDRESS PORTA C
RWCU EQU 3		;ADDRESS UPRAV. SLOVA BB55
C_TIME0 DATA 34h 	;YACHEIKA PAMATI - CONSTANTI TAIMERA
TC_F_N EQU 10		;TAIMERNAYA CONSTANTA DLYA OTRICATELNIH CHISEL
N_P DATA 35h		;SHETHIK DLYA POL. CHISEL
N_N DATA 36h 		;OTRICAT. CHISEL
C_F_P EQU 3		;3*200ms
C_F_N EQU 2		;2*300ms
B_Z BIT 2Fh.7		;FLAG OTRICATELNOGO CHISLA

ORG 0h
JMP START

ORG 8100h
START:
	MOV A,#INIT_PPI
	MOV DPL,#RWCU	 		;NASTROIKA BB55 NA NEOBHODIMYI REZHIM
	MOVX @DPTR,A
	MOV A,#INIT_KN
	MOV DPL,#P_A 			;NASTROIKA KOMUTATOROV NAPRYASHGENIA
	MOVX @DPTR,A		
	MOV A,TMOD
	ORL A,#0000001b	
	MOV TMOD,A			;T/C0 - 16 BITNUYI TAIMER (T/C1 NE TROGHEAM, T.K. ON ZANAT NA RXD,TXD
	MOV TH0,#HIGH(NOT(TIME-1))
	MOV TL0,#LOW(NOT(TIME-1))
	GO:
		CALL ADC
		JB ADC_MK,$ 	;ZHDEM 30mks - PREOBRAZOVANIE "ADC"
		CALL OBSCH
		SJMP GO

;PODPROGRAMMA STARTA "ADC"
ADC:
	SETB MK_ADC 		;SBROS "ADC"
	NOP
	NOP
	NOP
	NOP
	CLR MK_ADC		 ;NACHAT' PREOBRAZOVANIE
RET

;PODPROGRAMA ZAPUSKAYUSHUASA PO SINGNALY GOTOV NA LINIY P1.1
OBSCH:
	MOV DPL,#P_B 		;POLYCHAEM DANNIE S "ADC" -
	MOVX A,@DPTR 		; - CHEREZ PORT B BB55
	MOV INF_ADC,A 		;ZAPIS V YACHEIKY PAMATI PRINYATOGO CHISLA
	CLR C
	RLC A 			;SDVIG A VLEVO DLAYA OPREDELENIE ZNAKA CHISLA PO - 
	CPL C			;INVERTIRUEM, T.K. OY(OPAM)-INV. => 1-POLOSHITEL., A 0-OTRICAT.
	JNB CY,OTRIC 		;PEREHOD NA OTRICAT VETKY
;POLOSHITELNIE--------------------------------------------------------------------------------	
	CLR B_Z
	CALL RASCHET
	MOV N_P,#C_F_P
CYCLE1:
	CALL VIVOD
	DJNZ N_P,CYCLE1		;3-I RAZA VIVODIM POLOZHITELNOE CHISLO PO 200ms => 200*3=600ms
	RET
	OTRIC:			;OTRICATELNIE----------------------------
		SETB B_Z
		CALL RASCHET
		MOV N_N,#C_F_N
	CYCLE2:
		CALL VIVOD
		MOV C_TIME0,#TC_F_N	;TAK ZHE VIVODIM ODIN TAKT=200ms, ZATEM ZADERSHKA NA 100ms
	CYCLE3:				;(10*ms*10=100) DLYA EFFECTA MIGANIYA OTRCAT. CHISEL
		CALL DELAY
		DJNZ C_TIME0,CYCLE3
		DJNZ N_N,CYCLE2	;V ITOGE POLUCHIM 2*(200ms+100ms)=600ms. T.O. OBRAZOM INTERVALI
	RET				;VREMENI RAVNI DLYA POL. I OTRICAT. CHISEL

;PODPROGRAMMA RASHCETA VIVODIMIH RAZRYADOV CHISLA
RASCHET:
	MOV SOTNI,#0 			;OBNYLENIE CONSTANT
	MOV DES,#0
	MOV EDIN,#0
	SETB RS0		;VIBIRAEM 3-I BANK REGISTROV, T.K. PREDIDUSHIE ZANATI
	SETB RS1		;PROGRAMMOI MONITOR (MYI  ISPOLZUEM  R0)
	CPL C			;VOZVRASHAEM ICHODNOE SOSTOYANIE FLAGA "C"
	RRC A 			;VOZVRASHAEM ISHODNOE CHILSO, POSLE PROVERKI NA ZNAK
	ANL A,#01111111b 		;VIDELYAEM TOLKO INFORMACIUY
	JNB B_Z,NEXT		;ELSI CHISLO MEN'SHE 0, TO NEOBHODIMO ESCHE PROINVERTIROVAT'
	CPL A
	ANL A,#01111111b	
NEXT:
	MOV B,#4 		;MAX INF_ADC=128, A VIHODNOE 5120mV=> 512/128=4
	MUL AB 			;V B-STARSHAYA CHAST'
	MOV R0,B		;BUFFER R3 DLYA RABOTI FUNKCII
	CJNE R0,#1,SOT 		;ESLI B.0=1 TO CHISLO BOLSHE 255=> - 
	MOV SOTNI,#2 		; - KAK MINIMUM SOTEN 2-E
	CLR C
SOT:  
	SUBB A,#100		 ;OPREDELYAEM KOL-VO SOTEN V CHISLE
	JB CY,VOZVRAT
	INC SOTNI
	SJMP SOT
VOZVRAT:
	ADD A,#100
	CJNE R0,#1,VPERED	 ;PROPUSKAEM ETAP, ESLI CHISLO MEN'SHE 255
	ADD A,#55		 ;OSTAVHAYASIA CHAST' OT 255 B.0
VPERED:
	INC A			 ;NEOBHODIMO DOBAVIT', T.K. NE 0 PERVUI, A 1 V NASHEI ;SISTEME
	MOV B,#100
	DIV AB
	CJNE A,#1,DALEE
	INC SOTNI
DALEE:
	XCH A,B
	MOV B,#10
	DIV AB
	MOV DES,A
	MOV EDIN,B
RET

;PODPROGRAMMA VIVODA NA INDICATORY
VIVOD:
	MOV A,SOTNI
	ORL A,#00010000b 		;VIVOD 1 CIFRI
	MOV DPL,#P_C
	MOVX @DPTR,A
	CALL DELAY		;ZADERSHKA 10ms
	MOV A,DES
	ORL A,#00100000b
	MOVX @DPTR,A
	CALL DELAY
	MOV A,EDIN
	ORL A,#01000000b
	MOVX @DPTR,A
	CALL DELAY
	MOV A,#10000000b 	;VIVOD POSLEDNEI CIFRI (VSEGDA 0)
	MOVX @DPTR,A
	CALL DELAY
RET

;PODPROGRAMMA REGULIRUEMOI ZADERZHKI
DELAY:
	SETB TR0
	JNB TF0,$
	CLR TF0
	CLR TR0
	MOV TH0,#HIGH(NOT(TIME-1))
	MOV TL0,#LOW(NOT(TIME-1))
RET

END