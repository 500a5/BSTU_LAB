; --------------------------------------------------------------------------------------------------
;                           ws2_32.inc Copyright The MASM32 SDK 1998-2010
; --------------------------------------------------------------------------------------------------

IFNDEF WS2_32_INC
WS2_32_INC equ <1>

FreeAddrInfoW PROTO STDCALL :DWORD
IFDEF __UNICODE__
  FreeAddrInfo equ <FreeAddrInfoW>
ENDIF

GetAddrInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  GetAddrInfo equ <GetAddrInfoW>
ENDIF

GetNameInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  GetNameInfo equ <GetNameInfoW>
ENDIF

WEP PROTO STDCALL
WPUCompleteOverlappedRequest PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAccept PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD

WSAAddressToStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSAAddressToString equ <WSAAddressToStringA>
ENDIF

WSAAddressToStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSAAddressToString equ <WSAAddressToStringW>
ENDIF

WSAAsyncGetHostByAddr PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncGetHostByName PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncGetProtoByName PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncGetProtoByNumber PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncGetServByName PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncGetServByPort PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAAsyncSelect PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
WSACancelAsyncRequest PROTO STDCALL :DWORD
WSACancelBlockingCall PROTO STDCALL
WSACleanup PROTO STDCALL
WSACloseEvent PROTO STDCALL :DWORD
WSAConnect PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSACreateEvent PROTO STDCALL

WSADuplicateSocketA PROTO STDCALL :DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSADuplicateSocket equ <WSADuplicateSocketA>
ENDIF

WSADuplicateSocketW PROTO STDCALL :DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSADuplicateSocket equ <WSADuplicateSocketW>
ENDIF

WSAEnumNameSpaceProvidersA PROTO STDCALL :DWORD,:DWORD
IFNDEF __UNICODE__
  WSAEnumNameSpaceProviders equ <WSAEnumNameSpaceProvidersA>
ENDIF

WSAEnumNameSpaceProvidersW PROTO STDCALL :DWORD,:DWORD
IFDEF __UNICODE__
  WSAEnumNameSpaceProviders equ <WSAEnumNameSpaceProvidersW>
ENDIF

WSAEnumNetworkEvents PROTO STDCALL :DWORD,:DWORD,:DWORD

WSAEnumProtocolsA PROTO STDCALL :DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSAEnumProtocols equ <WSAEnumProtocolsA>
ENDIF

WSAEnumProtocolsW PROTO STDCALL :DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSAEnumProtocols equ <WSAEnumProtocolsW>
ENDIF

WSAEventSelect PROTO STDCALL :DWORD,:DWORD,:DWORD
WSAGetLastError PROTO STDCALL
WSAGetOverlappedResult PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAGetQOSByName PROTO STDCALL :DWORD,:DWORD,:DWORD

WSAGetServiceClassInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSAGetServiceClassInfo equ <WSAGetServiceClassInfoA>
ENDIF

WSAGetServiceClassInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSAGetServiceClassInfo equ <WSAGetServiceClassInfoW>
ENDIF

WSAGetServiceClassNameByClassIdA PROTO STDCALL :DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSAGetServiceClassNameByClassId equ <WSAGetServiceClassNameByClassIdA>
ENDIF

WSAGetServiceClassNameByClassIdW PROTO STDCALL :DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSAGetServiceClassNameByClassId equ <WSAGetServiceClassNameByClassIdW>
ENDIF

WSAHtonl PROTO STDCALL :DWORD,:DWORD,:DWORD
WSAHtons PROTO STDCALL :DWORD,:DWORD,:DWORD

WSAInstallServiceClassA PROTO STDCALL :DWORD
IFNDEF __UNICODE__
  WSAInstallServiceClass equ <WSAInstallServiceClassA>
ENDIF

WSAInstallServiceClassW PROTO STDCALL :DWORD
IFDEF __UNICODE__
  WSAInstallServiceClass equ <WSAInstallServiceClassW>
ENDIF

WSAIoctl PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSAIsBlocking PROTO STDCALL
WSAJoinLeaf PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD

WSALookupServiceBeginA PROTO STDCALL :DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSALookupServiceBegin equ <WSALookupServiceBeginA>
ENDIF

WSALookupServiceBeginW PROTO STDCALL :DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSALookupServiceBegin equ <WSALookupServiceBeginW>
ENDIF

WSALookupServiceEnd PROTO STDCALL :DWORD

WSALookupServiceNextA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSALookupServiceNext equ <WSALookupServiceNextA>
ENDIF

WSALookupServiceNextW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSALookupServiceNext equ <WSALookupServiceNextW>
ENDIF

WSANSPIoctl PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSANtohl PROTO STDCALL :DWORD,:DWORD,:DWORD
WSANtohs PROTO STDCALL :DWORD,:DWORD,:DWORD
WSAProviderConfigChange PROTO STDCALL :DWORD,:DWORD,:DWORD
WSARecv PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSARecvDisconnect PROTO STDCALL :DWORD,:DWORD
WSARecvFrom PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSARemoveServiceClass PROTO STDCALL :DWORD
WSAResetEvent PROTO STDCALL :DWORD
WSASend PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSASendDisconnect PROTO STDCALL :DWORD,:DWORD
WSASendTo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSASetBlockingHook PROTO STDCALL :DWORD
WSASetEvent PROTO STDCALL :DWORD
WSASetLastError PROTO STDCALL :DWORD

WSASetServiceA PROTO STDCALL :DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSASetService equ <WSASetServiceA>
ENDIF

WSASetServiceW PROTO STDCALL :DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSASetService equ <WSASetServiceW>
ENDIF

WSASocketA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSASocket equ <WSASocketA>
ENDIF

WSASocketW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSASocket equ <WSASocketW>
ENDIF

WSAStartup PROTO STDCALL :DWORD,:DWORD

WSAStringToAddressA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFNDEF __UNICODE__
  WSAStringToAddress equ <WSAStringToAddressA>
ENDIF

WSAStringToAddressW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
IFDEF __UNICODE__
  WSAStringToAddress equ <WSAStringToAddressW>
ENDIF

WSAUnhookBlockingHook PROTO STDCALL
WSAWaitForMultipleEvents PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSCDeinstallProvider PROTO STDCALL :DWORD,:DWORD
WSCEnableNSProvider PROTO STDCALL :DWORD,:DWORD
WSCEnumProtocols PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
WSCGetProviderPath PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
WSCInstallNameSpace PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSCInstallProvider PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSCUnInstallNameSpace PROTO STDCALL :DWORD
WSCUpdateProvider PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
WSCWriteNameSpaceOrder PROTO STDCALL :DWORD,:DWORD
WSCWriteProviderOrder PROTO STDCALL :DWORD,:DWORD
__WSAFDIsSet PROTO STDCALL :DWORD,:DWORD
accept PROTO STDCALL :DWORD,:DWORD,:DWORD
bind PROTO STDCALL :DWORD,:DWORD,:DWORD
closesocket PROTO STDCALL :DWORD
connect PROTO STDCALL :DWORD,:DWORD,:DWORD
freeaddrinfo PROTO STDCALL :DWORD
getaddrinfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
gethostbyaddr PROTO STDCALL :DWORD,:DWORD,:DWORD
gethostbyname PROTO STDCALL :DWORD
gethostname PROTO STDCALL :DWORD,:DWORD
getnameinfo PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
getpeername PROTO STDCALL :DWORD,:DWORD,:DWORD
getprotobyname PROTO STDCALL :DWORD
getprotobynumber PROTO STDCALL :DWORD
getservbyname PROTO STDCALL :DWORD,:DWORD
getservbyport PROTO STDCALL :DWORD,:DWORD
getsockname PROTO STDCALL :DWORD,:DWORD,:DWORD
getsockopt PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
htonl PROTO STDCALL :DWORD
htons PROTO STDCALL :DWORD
inet_addr PROTO STDCALL :DWORD
inet_ntoa PROTO STDCALL :DWORD
ioctlsocket PROTO STDCALL :DWORD,:DWORD,:DWORD
listen PROTO STDCALL :DWORD,:DWORD
ntohl PROTO STDCALL :DWORD
ntohs PROTO STDCALL :DWORD
recv PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
recvfrom PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
select PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
send PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
sendto PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
setsockopt PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
shutdown PROTO STDCALL :DWORD,:DWORD
socket PROTO STDCALL :DWORD,:DWORD,:DWORD

ELSE
  echo -----------------------------------------
  echo WARNING duplicate include file ws2_32.inc
  echo -----------------------------------------
ENDIF
