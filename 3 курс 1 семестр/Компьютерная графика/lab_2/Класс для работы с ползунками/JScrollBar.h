// Кафедра программного обеспечения вычислительной техники и автоматизированных систем
// БГТУ им. В.Г. Шухова
// Автор: Осипов О.В.


#ifndef JSCROLLBAR_H
#define JSCROLLBAR_H
#include <QScrollBar>

namespace bstu {

// Класс - ползунок предназначен для изменения диапазона графиков по оси x или y
// Для его использования необходимо предварительно преобразовать в окне дизайна Qt Creator необходимый объект из класса QScrollBar в класс JScrollBar
class JScrollBar : public QScrollBar
{
public:

    explicit JScrollBar(QWidget *parent = 0);

    // Процедура предназначена для изменения ширины ползунка и его позиции при прокрутке колеса мыши на величину wheel_delta в относительной координате p в пределах от 0 до 1 на графике
    // Входные параметры:
    // p - относительная координата x или y (т.е. в пределах от 0 до 1). К примеру, p = (x - x1) / (x2 - x1)
    // wheel_delta - смещение колеса мыши (можно передать значение QWheelEvent::delta())
    // Параметр p обязательно должен быть в пределах от 0 до 1
    // Функция должна вызываться во время прокрутки колеса мыши на графике функций
    void setBarValue(double p, int wheel_delta); 

    // Процедура определяет диапазон видимой области графика по оси абсцисс
    // Выходные параметры:
    // [vis_x1, vis_x2] - границы видимой области по оси абсцисс, заданные в мировой системе координат, для горизонтального ползунка
    void getVisibleRangeX(double* vis_x1, double* vis_x2);

	// Процедура определяет диапазон видимой области графика по оси ординат
    // Выходные параметры:
    // [vis_y1, vis_y2] - границы видимой области по оси ординат, заданные в мировой системе координат, для вертикального ползунка
    void getVisibleRangeY(double* vis_y1, double* vis_y2);

    // Процедура задаёт диапазон всего графика [x1, x2], в том числе невидимой области
    void setChartRange(double, double);

private:
    double x1, x2;
};

}

#endif // JSCROLLBAR_H
